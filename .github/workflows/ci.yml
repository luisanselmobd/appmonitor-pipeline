name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  ACTIONS_STEP_DEBUG: true

jobs:
  validate:
    name: Verificação da sintaxe do script 
    runs-on: ubuntu-latest
    outputs:
      validate_result: ${{ steps.syntax-check.outputs.result }}
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Verifica a sintaxe do script
        id: syntax-check
        run: |
          if bash -n status-check.sh; then
            echo "::notice::Sintaxe do script validada com sucesso"
            echo "result= Aprovado" >> $GITHUB_OUTPUT
          else
            echo "::error::Falha na verificação de sintaxe do script"
            echo "result= Falhou" >> $GITHUB_OUTPUT
            exit 1
          fi

  test:
    name: Simulação da execução de testes  
    runs-on: ubuntu-latest
    needs: validate
    outputs:
      test_result: ${{ steps.run-tests.outputs.result }}
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Simula a execução de testes
        id: run-tests
        run: |
          echo "::warning::Executando testes (simulação)"
          echo "::notice::Testes concluídos"
          echo "result= Testes aprovados" >> $GITHUB_OUTPUT
          exit 0

  package:
    name: Geração de artefato e realização do upload  
    runs-on: ubuntu-latest
    needs: test
    outputs:
      package_result: ${{ steps.create-artifact.outputs.result }}
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Cria o artefato ZIP
        id: create-artifact
        run: |
          mkdir -p report
          echo "Relatório de teste" > report/report.txt
          cp status-check.sh report/
          zip -r report.zip report
          echo "::notice::Artefato criado"
          echo "result= Artefato criado" >> $GITHUB_OUTPUT

      - name: Faz o upload do artefato
        uses: actions/upload-artifact@v4
        with:
          name: report
          path: report.zip

  summary:
    name: Geração de resumo
    needs: [validate, test, package]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Gera resumo do pipeline
        run: |
          echo "::notice::Gerando resumo"
          echo "## Resumo do Pipeline" >> $GITHUB_STEP_SUMMARY
          echo "- **OS**: ${{ runner.os }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Resultado Validate**: ${{ needs.validate.outputs.validate_result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Resultado Test**: ${{ needs.test.outputs.test_result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Resultado Package**: ${{ needs.package.outputs.package_result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Artefato**: [${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
